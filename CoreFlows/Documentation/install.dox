/*!
\page install Standalone compilation of SOLVERLAB from sources

\section prerequisites Prerequisites for the compilation of SOLVERLAB

The following package list is sufficient on Ubuntu 20.04 :

 - \em cmake3              (mandatory)
 - \em g++                 or another C++ compiler (mandatory)
 - \em python3-dev        , \em python3-numpy  and \em swig3  for python scripts (mandatory)
 - \em pyqt5-dev-tools     to generate the Graphical User Interface (optional)
 - \em python3-matplotlib , \em paraview-dev , \em libnetcdf-dev  (on Ubuntu 20.04) and \em python3-paraview  for postprocessing tools such as plotting curves (matplotlib) or generating 3D view images (paraview) (optional)
 - \em ffmpeg              and \em ffmpeg-devel  to generate an animation from a set of curves (optional)
 - \em libmpich-dev        or   libopenmpi-dev  for mpi parallelisation (optional)
 - \em libcppunit-dev     , if you want to generate unit tests. Use the compilation option \em -DSOLVERLAB_WITH_TESTS=ON  (optional).
 - \em rpm                , if you want to generate RPM installation packages. Use the compilation option \em -DSOLVERLAB_WITH_PACKAGE=ON  (optional).


\section downloadSources Download SOLVERLABÂ sources

Download SOLVERLAB sources from GitHub
- click on the following [link](https://github.com/ndjinga/SOLVERLAB/archive/master.zip), then unzip the file in a directory SOLVERLAB-master
- or type the following in a terminal : \verbatim wget https://github.com/ndjinga/SOLVERLAB/archive/master.zip\endverbatim, then unzip the file in a directory SOLVERLAB-master
- or clone the git repository to a folder SOLVERLAB-master:  \verbatim git clone https://github.com/ndjinga/SOLVERLAB.git SOLVERLAB-master\endverbatim


\section compileAndInstall Compile and install SOLVERLAB from source files

First create a directory named 'build' where the compilation will take place and open a terminal in that directory.

<b> Simpler configuration for a minimum version:</b>
- \verbatim cmake /path/to/SOLVERLAB-master/ -DCMAKE_INSTALL_PREFIX=../SOLVERLAB_install -DCMAKE_BUILD_TYPE=Release -DSOLVERLAB_WITH_DOCUMENTATION=ON \endverbatim   
> This will download and build the following dependencies
> - PETSc from https://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-3.19.6.tar.gz
> - SLEPc from https://slepc.upv.es/download/distrib/slepc-3.19.2.tar.gz
> - F2CBLASLAPACK from https://ftp.mcs.anl.gov/pub/petsc/externalpackages/f2cblaslapack-3.8.0.q2.tar.gz
> - HDF5 from https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/hdf5-1.10.3/src/hdf5-1.10.3.tar.gz
> - MEDFILE from http://git.salome-platform.org/gitpub/modules/med.git
> - MEDCOUPLING from http://git.salome-platform.org/gitpub/tools/medcoupling.git
> - CONFIGURATION from http://git.salome-platform.org/gitpub/tools/configuration.git

<b>Advanced configuration for a complete version:</b>
If you already have an installation of PETSC, MED and MEDCoupling, you may save computational time and memory by using the following cmake instruction:
- \verbatim cmake /path/to/SOLVERLAB-master -DCMAKE_INSTALL_PREFIX=../SOLVERLAB_install -DCMAKE_BUILD_TYPE=Release -G"Eclipse CDT4 - Unix Makefiles" -D_ECLIPSE_VERSION=4.3 -DSOLVERLAB_WITH_DOCUMENTATION=ON -DPETSC_DIR=${PETSC_DIR} -DPETSC_ARCH=${PETSC_ARCH} -DMEDFILE_ROOT_DIR=${MEDFILE_ROOT_DIR} -DMEDCOUPLING_ROOT_DIR=${MEDCOUPLING_ROOT_DIR}  \endverbatim   
> This assumes that you have an existing 
> - installation of PETSc (with submodules SLEPC) at the location given by the environment variable PETSC_DIR and the architecture variable PETSC_ARCH  
> See the instructions given in [the official documentation](https://petsc.org/release/install/)
> - installation of MED                                    at the location given by the environment variable MEDFILE_ROOT_DIR
> - installation of MEDCOUPLING                            at the location given by the environment variable MEDCOUPLING_ROOT_DIR

The 2 dependencies MED and MEDCOUPLING should have been compiled with the same version of HDF5  
Warning : the linux package libhdf5-dev is generally not compatible with the libraries MED and MEDCoupling  

<b>Compile and install:</b>
- \verbatim make\endverbatim
- \verbatim make install\endverbatim

\section runTests Run tests and documentation

Run unit and example tests:
- \verbatim make examples\endverbatim

Run validation tests:
- \verbatim make validation\endverbatim

Generate html user guide 
- \verbatim make doc-user\endverbatim

Generate html developer guide
- \verbatim make doc\endverbatim

\section parallelVersion Parallel version

To compile a parallel version of SOLVERLAB, you first need parallel C and C++ compilers and a parallel installation of the packages PETSc, MED and MEDCoupling.  

Then you need to add the following extra CMAKE parameters to the configuration step :  
- \verbatim  -DMPI_HOME=${MPI_HOME} -DCMAKE_C_COMPILER=${MPI_C_COMPILER} -DCMAKE_CXX_COMPILER=${MPI_CXX_COMPILER} \endverbatim 

where
- MPI_HOME stores the location of the mpi library
- MPI_C_COMPILER stores the location of the parallel C compiler
- MPI_CXX_COMPILER stores the location of the parallel C++ compiler

*/
